" Settings:

    " Use the latest 1k lines to determine syntax highlighting
    " Note that this is too small for some file types, so check after/ftplugin
    " for overrides.
    syntax sync minlines=1000

    " ConEmu can use bold and italic backgrounds
    if &term == "win32"
        let g:italics = 11
        let g:bold = 12
    else
        let g:italics = 'NONE'
        let g:bold = 'NONE'
    endif

    " Change font
    if has("gui_running")
      if has("gui_gtk2")
        set guifont=Inconsolata\ 12
      elseif has("gui_macvim")
        set guifont=Menlo\ Regular:h14
      elseif has("gui_win32")
        set guifont=Consolas:h16:cANSI
      endif
    endif

    " Color scheme has to be set in init.lua after the vimrc files are all
    " loaded due to runtimepath nonsense. This just configures some of the
    " details of jellybeans so that it's ready when we load it.
    let g:jellybeans_background_color = "000000"
    let g:jellybeans_background_color_256 = "000"
    if has('gui_running')
        let g:jellybeans_overrides = {
            \ 'IncSearch': { 'guifg': '000000', 'guibg': 'FFFF00'},
            \ 'Search':    { 'guifg': '000000', 'guibg': 'BBBB00'},
        \ }
    elseif &t_Co == 256
        let g:jellybeans_overrides = {
            \ 'Folded': { 'guifg': 'FFFFFF', 'guibg': '222222', 'gui': 'italic'},
            \ 'Normal': { 'guifg': 'e8e8d3' },
            \ 'pythonBytesEscape': { 'guifg': '008787' },
            \ 'PythonStrInterpRegion': { 'guifg': 'e8e8d3' },
            \ 'SpellBad': { 'guibg': '902020', 'attr': 'underline'},
            \ 'SpellCap': { 'guibg': '00005f', 'attr': 'underline'},
        \ }
        " this actually seems pretty good
    else
        let g:jellybeans_overrides = {
            \ 'Comment':   { 'ctermfg': 'Gray', 'ctermbg': g:italics},
            \ 'Constant':  { 'ctermfg': 'DarkRed', 'ctermbg': 'NONE'},
            \ 'CursorColumn':{'ctermfg': 'Black', 'ctermbg': 'DarkGray'},
            \ 'CursorLine':{ 'ctermfg': 'Black', 'ctermbg': 'Gray'},
            \ 'Delimeter': { 'ctermfg': 'DarkCyan', 'ctermbg': g:bold},
            \ 'DiffDelete':{ 'ctermfg': 'White', 'ctermbg': 'DarkRed'},
            \ 'DiffText':  { 'ctermfg': 'Black', 'ctermbg': 'LightBlue'},
            \ 'Folded':    { 'ctermfg': 'Gray', 'ctermbg': 'DarkGray'},
            \ 'FoldColumn':{ 'ctermfg': 'Gray', 'ctermbg': 'DarkGray'},
            \ 'Function':  { 'ctermfg': 'DarkYellow', 'ctermbg': 'NONE'},
            \ 'Identifier':{ 'ctermfg': 'Magenta', 'ctermbg': 'NONE'},
            \ 'IncSearch': { 'ctermfg': 'Black', 'ctermbg': 'Yellow'},
            \ 'LineNr':    { 'ctermfg': 'DarkGray', 'ctermbg': 'NONE'},
            \ 'MatchParen':{ 'ctermfg': 'White', 'ctermbg': 'DarkBlue'},
            \ 'ModeMsg':   { 'ctermfg': 'White', 'ctermbg': g:bold},
            \ 'NonText':   { 'ctermfg': 'DarkGray', 'ctermbg': 'NONE'},
            \ 'PerlMethod':{ 'ctermfg': 'Yellow', 'ctermbg': 'NONE'},
            \ 'PMenu':     { 'ctermfg': 'White', 'ctermbg': 'DarkGray'},
            \ 'PreciseJumpTarget': {'ctermfg': 'White', 'ctermbg': 'DarkGreen'},
            \ 'Search':    { 'ctermfg': 'Black', 'ctermbg': 'DarkYellow'},
            \ 'SignColumn':{ 'ctermfg': 'Gray', 'ctermbg': 'DarkGray'},
            \ 'StatusLine':{ 'ctermfg': 'Black', 'ctermbg': 'Gray'},
            \ 'StatusLineNC':{ 'ctermfg': 'White', 'ctermbg': 'DarkGray'},
            \ 'SpecialKey':{ 'ctermfg': 'Gray', 'ctermbg': 'DarkGray'},
            \ 'SpellBad':  { 'ctermfg': 'White', 'ctermbg': 'DarkRed'},
            \ 'SpellCap':  { 'ctermfg': 'White', 'ctermbg': 'Blue'},
            \ 'SpellLocal':{ 'ctermfg': 'White', 'ctermbg': 'DarkCyan'},
            \ 'SpellRare': { 'ctermfg': 'White', 'ctermbg': 'DarkMagenta'},
            \ 'String':    { 'ctermfg': 'DarkGreen', 'ctermbg': 'NONE'},
            \ 'TabLine':   { 'ctermfg': 'Black', 'ctermbg': 'Gray'},
            \ 'TabLineFill':{'ctermfg': 'Gray', 'ctermbg': 'NONE'},
            \ 'texArgDelims': { 'ctermfg': 'DarkCyan', 'ctermbg': 'NONE'},
            \ 'texArgsEnvReq':{ 'ctermfg': 'DarkGreen', 'ctermbg': 'NONE'},
            \ 'texArgsSpclSpclReq':{ 'ctermfg': 'DarkGreen', 'ctermbg': 'NONE'},
            \ 'texArgsSpclSpclOpt':{ 'ctermfg': 'Green', 'ctermbg': 'NONE'},
            \ 'texArgsNormNorm':{ 'ctermfg': 'DarkGreen', 'ctermbg': 'NONE'},
            \ 'texItalStyle': {'ctermfg': 'White', 'ctermbg': g:italics},
            \ 'TexBeginEndName':{ 'ctermfg': 'DarkGreen', 'ctermbg': g:bold},
            \ 'TexMatcher':{ 'ctermfg': 'DarkGreen', 'ctermbg': g:bold},
            \ 'Todo'     : { 'ctermfg': 'White', 'ctermbg': g:bold},
            \ 'VertSplit': { 'ctermfg': 'Gray', 'ctermbg': 'DarkGray'},
            \ 'vimFunction':{'ctermfg': 'DarkYellow', 'ctermbg' :'NONE'},
            \ 'vimUserFunc':{'ctermfg': 'DarkYellow', 'ctermbg' :'NONE'},
            \ 'Visual'   : { 'ctermfg': 'White', 'ctermbg': 'DarkGray'},
            \ 'VisualNOS': { 'ctermfg': 'Gray', 'ctermbg': g:bold},
        \ }
    endif
    " let g:jellybeans_use_lowcolor_black = 0

    " fix perl comment coloring
    " hi perlComment ctermfg=DarkGreen

    " cursor settings
    if has("gui_running")
        set guicursor+=n-v-c:blinkon0
        set guicursor+=i-ci:ver20-blinkon0
    endif

    " highlight long lines
    execute "highlight Italic ctermbg=" . g:italics . " ctermfg=NONE guifg=NONE guibg=NONE gui=italic "
    execute "highlight OverLength ctermbg=" . g:italics . " ctermfg=gray guifg=gray guibg=NONE gui=italic "
    " highlight OverLength ctermbg=darkgray ctermfg=white guibg=#592929

    highlight Pmenu ctermbg=black ctermfg=darkgreen
    highlight PmenuSel ctermbg=darkgray ctermfg=black


" Mappings:
    " clear highlighting
    nnoremap <silent> <Leader>/ :nohlsearch<Enter>
    nnoremap <silent> <Esc> :nohlsearch<Enter>

    " show highlight group under cursor
    map hl :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

" Functions:
function Bright()
    set background=light
    colo morning
endfunction

" Commmands:
    command! Bright call Bright()
